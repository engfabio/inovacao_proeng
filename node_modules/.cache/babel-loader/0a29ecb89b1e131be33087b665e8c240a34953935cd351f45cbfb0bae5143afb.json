{"ast":null,"code":"import _objectSpread from\"C:/github/inovacao_proeng/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState}from'react';import{IdeaStatus}from'../types';import{useAuth}from'./AuthContext';import{useGamification}from'./GamificationContext';import{mockIdeas}from'../data/mockData';import{jsx as _jsx}from\"react/jsx-runtime\";const IdeasContext=/*#__PURE__*/createContext(undefined);export const useIdeas=()=>{const context=useContext(IdeasContext);if(!context){throw new Error('useIdeas must be used within an IdeasProvider');}return context;};export const IdeasProvider=_ref=>{let{children}=_ref;const[ideas,setIdeas]=useState(mockIdeas);const{user}=useAuth();const{addPoints}=useGamification();const submitIdea=async ideaData=>{if(!user)throw new Error('Usuário não autenticado');const newIdea=_objectSpread(_objectSpread({},ideaData),{},{id:Date.now().toString(),authorId:user.id,author:user,votes:0,voters:[],comments:[],status:IdeaStatus.RECEIVED,createdAt:new Date(),updatedAt:new Date()});setIdeas([...ideas,newIdea]);addPoints(10);// Pontos por submeter ideia\n};const voteIdea=async ideaId=>{if(!user)throw new Error('Usuário não autenticado');setIdeas(ideas.map(idea=>{if(idea.id===ideaId&&!idea.voters.includes(user.id)){addPoints(1);// Pontos por votar\nreturn _objectSpread(_objectSpread({},idea),{},{votes:idea.votes+1,voters:[...idea.voters,user.id]});}return idea;}));};const addComment=async(ideaId,content)=>{if(!user)throw new Error('Usuário não autenticado');const newComment={id:Date.now().toString(),content,authorId:user.id,author:user,ideaId,createdAt:new Date()};setIdeas(ideas.map(idea=>{if(idea.id===ideaId){addPoints(3);// Pontos por comentar\nreturn _objectSpread(_objectSpread({},idea),{},{comments:[...idea.comments,newComment]});}return idea;}));};const updateIdeaStatus=async(ideaId,status,feedback)=>{setIdeas(ideas.map(idea=>{if(idea.id===ideaId){if(status===IdeaStatus.APPROVED){addPoints(50);// Pontos por ideia aprovada\n}else if(status===IdeaStatus.IMPLEMENTED){addPoints(100);// Pontos por ideia implementada\n}return _objectSpread(_objectSpread({},idea),{},{status,feedback:feedback||idea.feedback,updatedAt:new Date()});}return idea;}));};const getMyIdeas=()=>{if(!user)return[];return ideas.filter(idea=>idea.authorId===user.id);};const getTopIdeas=()=>{return[...ideas].sort((a,b)=>b.votes-a.votes).slice(0,10);};return/*#__PURE__*/_jsx(IdeasContext.Provider,{value:{ideas,submitIdea,voteIdea,addComment,updateIdeaStatus,getMyIdeas,getTopIdeas},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","IdeaStatus","useAuth","useGamification","mockIdeas","jsx","_jsx","IdeasContext","undefined","useIdeas","context","Error","IdeasProvider","_ref","children","ideas","setIdeas","user","addPoints","submitIdea","ideaData","newIdea","_objectSpread","id","Date","now","toString","authorId","author","votes","voters","comments","status","RECEIVED","createdAt","updatedAt","voteIdea","ideaId","map","idea","includes","addComment","content","newComment","updateIdeaStatus","feedback","APPROVED","IMPLEMENTED","getMyIdeas","filter","getTopIdeas","sort","a","b","slice","Provider","value"],"sources":["C:/github/inovacao_proeng/src/contexts/IdeasContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { Idea, IdeasContextType, IdeaStatus } from '../types';\nimport { useAuth } from './AuthContext';\nimport { useGamification } from './GamificationContext';\nimport { mockIdeas } from '../data/mockData';\n\nconst IdeasContext = createContext<IdeasContextType | undefined>(undefined);\n\nexport const useIdeas = () => {\n  const context = useContext(IdeasContext);\n  if (!context) {\n    throw new Error('useIdeas must be used within an IdeasProvider');\n  }\n  return context;\n};\n\nexport const IdeasProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [ideas, setIdeas] = useState<Idea[]>(mockIdeas);\n  const { user } = useAuth();\n  const { addPoints } = useGamification();\n\n  const submitIdea = async (ideaData: Omit<Idea, 'id' | 'authorId' | 'votes' | 'voters' | 'comments' | 'status' | 'createdAt' | 'updatedAt'>) => {\n    if (!user) throw new Error('Usuário não autenticado');\n\n    const newIdea: Idea = {\n      ...ideaData,\n      id: Date.now().toString(),\n      authorId: user.id,\n      author: user,\n      votes: 0,\n      voters: [],\n      comments: [],\n      status: IdeaStatus.RECEIVED,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n\n    setIdeas([...ideas, newIdea]);\n    addPoints(10); // Pontos por submeter ideia\n  };\n\n  const voteIdea = async (ideaId: string) => {\n    if (!user) throw new Error('Usuário não autenticado');\n\n    setIdeas(ideas.map(idea => {\n      if (idea.id === ideaId && !idea.voters.includes(user.id)) {\n        addPoints(1); // Pontos por votar\n        return {\n          ...idea,\n          votes: idea.votes + 1,\n          voters: [...idea.voters, user.id]\n        };\n      }\n      return idea;\n    }));\n  };\n\n  const addComment = async (ideaId: string, content: string) => {\n    if (!user) throw new Error('Usuário não autenticado');\n\n    const newComment = {\n      id: Date.now().toString(),\n      content,\n      authorId: user.id,\n      author: user,\n      ideaId,\n      createdAt: new Date()\n    };\n\n    setIdeas(ideas.map(idea => {\n      if (idea.id === ideaId) {\n        addPoints(3); // Pontos por comentar\n        return {\n          ...idea,\n          comments: [...idea.comments, newComment]\n        };\n      }\n      return idea;\n    }));\n  };\n\n  const updateIdeaStatus = async (ideaId: string, status: IdeaStatus, feedback?: string) => {\n    setIdeas(ideas.map(idea => {\n      if (idea.id === ideaId) {\n        if (status === IdeaStatus.APPROVED) {\n          addPoints(50); // Pontos por ideia aprovada\n        } else if (status === IdeaStatus.IMPLEMENTED) {\n          addPoints(100); // Pontos por ideia implementada\n        }\n        return {\n          ...idea,\n          status,\n          feedback: feedback || idea.feedback,\n          updatedAt: new Date()\n        };\n      }\n      return idea;\n    }));\n  };\n\n  const getMyIdeas = () => {\n    if (!user) return [];\n    return ideas.filter(idea => idea.authorId === user.id);\n  };\n\n  const getTopIdeas = () => {\n    return [...ideas].sort((a, b) => b.votes - a.votes).slice(0, 10);\n  };\n\n  return (\n    <IdeasContext.Provider value={{\n      ideas,\n      submitIdea,\n      voteIdea,\n      addComment,\n      updateIdeaStatus,\n      getMyIdeas,\n      getTopIdeas\n    }}>\n      {children}\n    </IdeasContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}