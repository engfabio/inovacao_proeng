{"ast":null,"code":"import _objectSpread from\"C:/github/inovacao_proeng/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{useAuth}from'./AuthContext';import{mockUsers}from'../data/mockData';import{jsx as _jsx}from\"react/jsx-runtime\";const GamificationContext=/*#__PURE__*/createContext(undefined);export const useGamification=()=>{const context=useContext(GamificationContext);if(!context){throw new Error('useGamification must be used within a GamificationProvider');}return context;};const levelThresholds=[0,100,500,1000,2000];const levelNames=['Iniciante','Colaborador','Inovador','Vision치rio','L칤der de Inova칞칚o'];export const GamificationProvider=_ref=>{let{children}=_ref;const{user}=useAuth();const[userPoints,setUserPoints]=useState(0);const[userLevel,setUserLevel]=useState(1);const[userBadges,setUserBadges]=useState([]);const[ranking,setRanking]=useState([]);useEffect(()=>{if(user){setUserPoints(user.points);setUserLevel(user.level);setUserBadges(user.badges);}updateRanking();},[user]);const updateRanking=()=>{const sortedUsers=[...mockUsers].sort((a,b)=>b.points-a.points);setRanking(sortedUsers);};const addPoints=points=>{const newPoints=userPoints+points;setUserPoints(newPoints);// Verificar novo n칤vel\nlet newLevel=1;for(let i=levelThresholds.length-1;i>=0;i--){if(newPoints>=levelThresholds[i]){newLevel=i+1;break;}}if(newLevel>userLevel){setUserLevel(newLevel);// Adicionar badge de novo n칤vel\nconst levelBadge={id:\"level-\".concat(newLevel),name:\"N\\xEDvel \".concat(newLevel,\": \").concat(levelNames[newLevel-1]),description:\"Alcan\\xE7ou o n\\xEDvel \".concat(newLevel),icon:'游꿢',unlockedAt:new Date()};setUserBadges([...userBadges,levelBadge]);}// Atualizar usu치rio no localStorage\nif(user){const updatedUser=_objectSpread(_objectSpread({},user),{},{points:newPoints,level:newLevel});localStorage.setItem('user',JSON.stringify(updatedUser));}updateRanking();};const checkAndUnlockBadges=()=>{// L칩gica para verificar e desbloquear badges baseado em conquistas espec칤ficas\n// Por exemplo: primeira ideia, 10 votos recebidos, etc.\n};return/*#__PURE__*/_jsx(GamificationContext.Provider,{value:{userPoints,userLevel,userBadges,ranking,addPoints,checkAndUnlockBadges},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useAuth","mockUsers","jsx","_jsx","GamificationContext","undefined","useGamification","context","Error","levelThresholds","levelNames","GamificationProvider","_ref","children","user","userPoints","setUserPoints","userLevel","setUserLevel","userBadges","setUserBadges","ranking","setRanking","points","level","badges","updateRanking","sortedUsers","sort","a","b","addPoints","newPoints","newLevel","i","length","levelBadge","id","concat","name","description","icon","unlockedAt","Date","updatedUser","_objectSpread","localStorage","setItem","JSON","stringify","checkAndUnlockBadges","Provider","value"],"sources":["C:/github/inovacao_proeng/src/contexts/GamificationContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { Badge, GamificationContextType, User } from '../types';\nimport { useAuth } from './AuthContext';\nimport { mockUsers } from '../data/mockData';\n\nconst GamificationContext = createContext<GamificationContextType | undefined>(undefined);\n\nexport const useGamification = () => {\n  const context = useContext(GamificationContext);\n  if (!context) {\n    throw new Error('useGamification must be used within a GamificationProvider');\n  }\n  return context;\n};\n\nconst levelThresholds = [0, 100, 500, 1000, 2000];\nconst levelNames = ['Iniciante', 'Colaborador', 'Inovador', 'Vision치rio', 'L칤der de Inova칞칚o'];\n\nexport const GamificationProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const { user } = useAuth();\n  const [userPoints, setUserPoints] = useState(0);\n  const [userLevel, setUserLevel] = useState(1);\n  const [userBadges, setUserBadges] = useState<Badge[]>([]);\n  const [ranking, setRanking] = useState<User[]>([]);\n\n  useEffect(() => {\n    if (user) {\n      setUserPoints(user.points);\n      setUserLevel(user.level);\n      setUserBadges(user.badges);\n    }\n    updateRanking();\n  }, [user]);\n\n  const updateRanking = () => {\n    const sortedUsers = [...mockUsers].sort((a, b) => b.points - a.points);\n    setRanking(sortedUsers);\n  };\n\n  const addPoints = (points: number) => {\n    const newPoints = userPoints + points;\n    setUserPoints(newPoints);\n\n    // Verificar novo n칤vel\n    let newLevel = 1;\n    for (let i = levelThresholds.length - 1; i >= 0; i--) {\n      if (newPoints >= levelThresholds[i]) {\n        newLevel = i + 1;\n        break;\n      }\n    }\n    \n    if (newLevel > userLevel) {\n      setUserLevel(newLevel);\n      // Adicionar badge de novo n칤vel\n      const levelBadge: Badge = {\n        id: `level-${newLevel}`,\n        name: `N칤vel ${newLevel}: ${levelNames[newLevel - 1]}`,\n        description: `Alcan칞ou o n칤vel ${newLevel}`,\n        icon: '游꿢',\n        unlockedAt: new Date()\n      };\n      setUserBadges([...userBadges, levelBadge]);\n    }\n\n    // Atualizar usu치rio no localStorage\n    if (user) {\n      const updatedUser = { ...user, points: newPoints, level: newLevel };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n    }\n\n    updateRanking();\n  };\n\n  const checkAndUnlockBadges = () => {\n    // L칩gica para verificar e desbloquear badges baseado em conquistas espec칤ficas\n    // Por exemplo: primeira ideia, 10 votos recebidos, etc.\n  };\n\n  return (\n    <GamificationContext.Provider value={{\n      userPoints,\n      userLevel,\n      userBadges,\n      ranking,\n      addPoints,\n      checkAndUnlockBadges\n    }}>\n      {children}\n    </GamificationContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}