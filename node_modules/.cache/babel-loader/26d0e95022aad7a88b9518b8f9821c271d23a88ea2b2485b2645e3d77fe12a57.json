{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{mockUsers}from'../data/mockData';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);useEffect(()=>{const storedUser=localStorage.getItem('user');if(storedUser){setUser(JSON.parse(storedUser));}},[]);const login=async(email,cpf)=>{// Simulação de login - em produção, isso seria uma chamada à API\nconst foundUser=mockUsers.find(u=>u.email===email&&u.cpf===cpf);if(foundUser){setUser(foundUser);localStorage.setItem('user',JSON.stringify(foundUser));}else{throw new Error('Credenciais inválidas');}};const logout=()=>{setUser(null);localStorage.removeItem('user');};const register=async userData=>{// Simulação de registro - em produção, isso seria uma chamada à API\nconst newUser={id:Date.now().toString(),name:userData.name,email:userData.email,cpf:userData.cpf,department:userData.department,position:userData.position,points:0,level:1,badges:[],createdAt:new Date()};mockUsers.push(newUser);setUser(newUser);localStorage.setItem('user',JSON.stringify(newUser));};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout,register},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","mockUsers","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","storedUser","localStorage","getItem","JSON","parse","login","email","cpf","foundUser","find","u","setItem","stringify","logout","removeItem","register","userData","newUser","id","Date","now","toString","name","department","position","points","level","badges","createdAt","push","Provider","value"],"sources":["C:/github/inovacao_proeng/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { User, AuthContextType, RegisterData } from '../types';\nimport { mockUsers } from '../data/mockData';\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  const login = async (email: string, cpf: string) => {\n    // Simulação de login - em produção, isso seria uma chamada à API\n    const foundUser = mockUsers.find(\n      u => u.email === email && u.cpf === cpf\n    );\n\n    if (foundUser) {\n      setUser(foundUser);\n      localStorage.setItem('user', JSON.stringify(foundUser));\n    } else {\n      throw new Error('Credenciais inválidas');\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  const register = async (userData: RegisterData) => {\n    // Simulação de registro - em produção, isso seria uma chamada à API\n    const newUser: User = {\n      id: Date.now().toString(),\n      name: userData.name,\n      email: userData.email,\n      cpf: userData.cpf,\n      department: userData.department,\n      position: userData.position,\n      points: 0,\n      level: 1,\n      badges: [],\n      createdAt: new Date()\n    };\n\n    mockUsers.push(newUser);\n    setUser(newUser);\n    localStorage.setItem('user', JSON.stringify(newUser));\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout, register }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE7E,OAASC,SAAS,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE7C,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAA8BQ,SAAS,CAAC,CAEzE,MAAO,MAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGT,UAAU,CAACM,WAAW,CAAC,CACvC,GAAI,CAACG,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,YAAqD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChF,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAAc,IAAI,CAAC,CAEnDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAc,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC/C,GAAIF,UAAU,CAAE,CACdD,OAAO,CAACI,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC,CACjC,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAK,KAAK,CAAG,KAAAA,CAAOC,KAAa,CAAEC,GAAW,GAAK,CAClD;AACA,KAAM,CAAAC,SAAS,CAAGrB,SAAS,CAACsB,IAAI,CAC9BC,CAAC,EAAIA,CAAC,CAACJ,KAAK,GAAKA,KAAK,EAAII,CAAC,CAACH,GAAG,GAAKA,GACtC,CAAC,CAED,GAAIC,SAAS,CAAE,CACbT,OAAO,CAACS,SAAS,CAAC,CAClBP,YAAY,CAACU,OAAO,CAAC,MAAM,CAAER,IAAI,CAACS,SAAS,CAACJ,SAAS,CAAC,CAAC,CACzD,CAAC,IAAM,CACL,KAAM,IAAI,CAAAd,KAAK,CAAC,uBAAuB,CAAC,CAC1C,CACF,CAAC,CAED,KAAM,CAAAmB,MAAM,CAAGA,CAAA,GAAM,CACnBd,OAAO,CAAC,IAAI,CAAC,CACbE,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC,CACjC,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAG,KAAO,CAAAC,QAAsB,EAAK,CACjD;AACA,KAAM,CAAAC,OAAa,CAAG,CACpBC,EAAE,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CACzBC,IAAI,CAAEN,QAAQ,CAACM,IAAI,CACnBhB,KAAK,CAAEU,QAAQ,CAACV,KAAK,CACrBC,GAAG,CAAES,QAAQ,CAACT,GAAG,CACjBgB,UAAU,CAAEP,QAAQ,CAACO,UAAU,CAC/BC,QAAQ,CAAER,QAAQ,CAACQ,QAAQ,CAC3BC,MAAM,CAAE,CAAC,CACTC,KAAK,CAAE,CAAC,CACRC,MAAM,CAAE,EAAE,CACVC,SAAS,CAAE,GAAI,CAAAT,IAAI,CAAC,CACtB,CAAC,CAEDhC,SAAS,CAAC0C,IAAI,CAACZ,OAAO,CAAC,CACvBlB,OAAO,CAACkB,OAAO,CAAC,CAChBhB,YAAY,CAACU,OAAO,CAAC,MAAM,CAAER,IAAI,CAACS,SAAS,CAACK,OAAO,CAAC,CAAC,CACvD,CAAC,CAED,mBACE5B,IAAA,CAACC,WAAW,CAACwC,QAAQ,EAACC,KAAK,CAAE,CAAEjC,IAAI,CAAEO,KAAK,CAAEQ,MAAM,CAAEE,QAAS,CAAE,CAAAlB,QAAA,CAC5DA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}