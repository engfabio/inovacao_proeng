{"ast":null,"code":"var _jsxFileName = \"C:\\\\github\\\\inovacao_proeng\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { mockUsers } from '../data/mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const login = async (email, cpf) => {\n    // Simulação de login - em produção, isso seria uma chamada à API\n    const foundUser = mockUsers.find(u => u.email === email && u.cpf === cpf);\n    if (foundUser) {\n      setUser(foundUser);\n      localStorage.setItem('user', JSON.stringify(foundUser));\n    } else {\n      throw new Error('Credenciais inválidas');\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  const register = async userData => {\n    // Simulação de registro - em produção, isso seria uma chamada à API\n    const newUser = {\n      id: Date.now().toString(),\n      name: userData.name,\n      email: userData.email,\n      cpf: userData.cpf,\n      department: userData.department,\n      position: userData.position,\n      points: 0,\n      level: 1,\n      badges: [],\n      createdAt: new Date()\n    };\n    mockUsers.push(newUser);\n    setUser(newUser);\n    localStorage.setItem('user', JSON.stringify(newUser));\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","mockUsers","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","storedUser","localStorage","getItem","JSON","parse","login","email","cpf","foundUser","find","u","setItem","stringify","logout","removeItem","register","userData","newUser","id","Date","now","toString","name","department","position","points","level","badges","createdAt","push","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/github/inovacao_proeng/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { User, AuthContextType, RegisterData } from '../types';\nimport { mockUsers } from '../data/mockData';\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  const login = async (email: string, cpf: string) => {\n    // Simulação de login - em produção, isso seria uma chamada à API\n    const foundUser = mockUsers.find(\n      u => u.email === email && u.cpf === cpf\n    );\n\n    if (foundUser) {\n      setUser(foundUser);\n      localStorage.setItem('user', JSON.stringify(foundUser));\n    } else {\n      throw new Error('Credenciais inválidas');\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  const register = async (userData: RegisterData) => {\n    // Simulação de registro - em produção, isso seria uma chamada à API\n    const newUser: User = {\n      id: Date.now().toString(),\n      name: userData.name,\n      email: userData.email,\n      cpf: userData.cpf,\n      department: userData.department,\n      position: userData.position,\n      points: 0,\n      level: 1,\n      badges: [],\n      createdAt: new Date()\n    };\n\n    mockUsers.push(newUser);\n    setUser(newUser);\n    localStorage.setItem('user', JSON.stringify(newUser));\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout, register }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}